{% import "@ws-demo/macros/tabs.twig" as tabs %}

{#
  Renders patterns option set.

  @param string id
    The pattern id.
  @param string variant
    The pattern variant.
  @param array patterns
    All available patterns
  @param array paths
    Paths configuration
#}
{% macro settings_pane(pattern_settings) %}
    {% import "@ws-demo/macros/tabs.twig" as tabs %}
    {% set accordion_config = {} %}
    {% for setting_name, pattern_setting in pattern_settings %}
        {% set content %}
            <div>
                {{ tabs.radio(setting_name, "None", "x-on:click=\"pattern_set = ''\"", "x-bind:class=\"{ 'bg-purple-600 transform translate-x-full': pattern_set === '' }\"") }}
            </div>
            {% for option_name, option_display in pattern_setting['options'] %}
                <div>
                    {{ tabs.radio(setting_name ~ "-" ~ option_name, option_display, "x-init=\"$watch('pattern_set', value => $dispatch('pattern-setting-changed', {setting:'xx',value:value}))\" x-on:click=\"pattern_set = '" ~ setting_name ~ "-" ~ option_name ~ "'\"", "x-bind:class=\"{ 'bg-purple-600 transform translate-x-full': pattern_set === '" ~ setting_name ~ "-" ~ option_name ~ "' }\"") }}
                </div>
            {% endfor %}
        {% endset %}
        {% set accordion_config = accordion_config|merge({(setting_name) : {'label': pattern_setting.label, 'content': content }}) %}
    {% endfor %}

    {{ tabs.accordion('settings_pane', accordion_config) }}
{% endmacro %}

{% macro variant_setting(pattern_id, variant_id, settings, envContext) %}
    {% import "@ws-demo/macros/code.twig" as code %}
    {% import "@ws-demo/macros/tabs.twig" as tabs %}
    <div class="ws-container">
        {{ pattern_preview(pattern_id, variant_id, {}, settings) }}
    </div>
    <hr class="ws-doc-seperator ws-my-8">
    {% set pattern = get_pattern(pattern_id, variant_id, {}, settings) %}

    <div class="ws-container">
        <h3 class="ws-doc-h3">Fields</h3>
        <table class="ws-doc-table">
            <thead>
            <tr>
                <th>Key</th>
                <th>Type</th>
                <th>Label</th>
                <th>Description</th>
                <th>Required</th>
            </tr>
            </thead>
            <tbody>
            {% for field_name, field in pattern.getFieldDefinitions() %}
                <tr>
                    <td>{{ field_name }}</td>
                    <td>{{ field['type'] }}</td>
                    <td>{{ field['label'] }}</td>
                    <td>{{ field['description'] }}</td>
                    <td>{{ field['required']|default('false') }}</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>

        {% if (pattern.hasSettingDefinitions()) %}
            <h3 class="ws-doc-h3">Settings</h3>
            <table class="ws-doc-table">
                <thead>
                <tr>
                    <th>Key</th>
                    <th>Type</th>
                    <th>Label</th>
                    <th>Description</th>
                    <th>Required</th>
                </tr>
                </thead>
                <tbody>
                {% for setting_name, setting in pattern.getSettingDefinitions() %}
                    <tr>
                        <td>{{ setting_name }}</td>
                        <td>{{ setting['type'] }}</td>
                        <td>{{ setting['label'] }}</td>
                        <td>{{ setting['description'] }}</td>
                        <td>{{ setting['required']|default('false') }}</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>

            <h3 class="ws-doc-h3">Twig</h3>
            {{ code.block(
                '{% include "' ~ pattern.getUse() ~ '" ' ~ pattern.getVariables()|json_encode(constant('JSON_PRETTY_PRINT')) ~ '  %}'
            ) }}
        {% endif %}
    </div>
{% endmacro %}
{#
  Renders the pattern demo page.

  @param string id
    The pattern id.
  @param array context
    An
  @param array paths
    Paths configuration
#}
{% macro variant(pattern_id, variant_id, envContext) %}
    {% set pattern = envContext['patterns'][pattern_id] %}
    <div class="ws-flex ws-flex-col ws-flex-grow"
         x-data="{pane_is_open: false,  pattern_set: '', settings_pane: '', addition_infos: '', rendered_pattern: '' }"
         x-init="$watch('pattern_set', value => fetch('http://127.0.0.1:8081?setting='+pattern_set+'&pattern=01-atoms/button/_button.twig')
                    .then(response => response.text())
                    .then(html => rendered_pattern = html))"
    >
        <main class="ws-flex ws-flex-col ws-flex-grow">
            <div class="ws-flex-grow ws-flex ws-flex-row">
                <div class="ws-flex-grow">
                    <header>
                        <h1 class="ws-doc-h1 ws-text-center">{{ pattern.label }}</h1>
                        <hr class="ws-doc-seperator ws-mb-8">
                    </header>

                    -------------------------------------- DYNAMIC --------------------------------------
                    <div x-html="rendered_pattern">

                    </div>
                    -------------------------------------- DYNAMIC --------------------------------------

                    <div x-show="pattern_set === ''">
                        {{ _self.variant_setting(pattern_id, variant_id, {}, envContext) }}
                    </div>
                    {% set pattern_settings = pattern_option_set(pattern_id, variant_id) %}
                    {% for setting_name, pattern_setting in pattern_settings %}
                        {% for option_name, option_display in pattern_setting['options'] %}
                            <div x-show="pattern_set === '{{ setting_name }}-{{ option_name }}'">
                                {% set settings = {} %}
                                {% set settings = settings|merge({(setting_name):(option_name)}) %}
                                {{ _self.variant_setting(pattern_id, variant_id, settings, envContext) }}
                            </div>
                        {% endfor %}
                    {% endfor %}
                </div>
                <div class="ws-fixed ws-bg-gray-800 ws-right-0 ws-px-4 ws-py-2 ws-text-white ws-transform ws-rotate--90"
                     x-on:click="pane_is_open = true">Open settings
                </div>
                <div class="ws-flex ws-bg-gray-800"
                     x-bind:class="{ 'ws-w-64': pane_is_open === true }"
                >
                    <div class="fixed ws-top-0"
                         x-bind:class="{ 'ws-w-64': pane_is_open === true }"
                    >
                        {{ _self.settings_pane(pattern_settings) }}
                    </div>
                </div>
            </div>
        </main>
    </div>
{% endmacro %}

{% macro demo(id, envContext) %}

    {% set patterns = envContext['patterns'] %}
    {% if patterns[id] is not empty %}
        <header class="ws-flex ws-flex-row ws-w-full ws-h-6 ws-fixed ws-top-0">
            <div class="ws-flex-grow">
                {% for variant_id, variant_config in current_pattern.variants %}
                    <div>{{ variant_config['display'] }}</div>
                {% endfor %}
            </div>
            <div class="ws-flex-shrink">
                <div>Open settings</div>
            </div>
        </header>

        {% set current_pattern = patterns[id] %}
        {% if current_pattern.variants|length != 0 %}
            {% for variant_id, variant_config in current_pattern.variants %}
                {{ _self.variant(id, variant_id, envContext) }}
            {% endfor %}
        {% else %}
            {{ _self.variant(id, null, envContext) }}
        {% endif %}
    {% else %}
        No Pattern "{{ id }}" found. Available patterns are:
        {% for key in patterns|keys %}
            {{ key }},
        {% endfor %}
    {% endif %}
{% endmacro %}
