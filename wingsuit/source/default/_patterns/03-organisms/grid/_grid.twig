{#
/**
 * @file
 * Grid component.
 *
 * Available variables for basic-page:
 *    - basic_page.variable_name [variable_type]: Description of the variable. Example below.
 *    - basic_page.invert [bool]: When set, colors will be inverted for light disp  lay on dark background.
 */
#}

{% set configuration = {
  1:
  {
    equal: "grid grid-cols-1 col-gap-default row-gap-default",
    border: "grid grid-cols-1 col-gap-default row-gap-default"
  },
  2:
  {
    equal: "grid grid-cols-2 col-gap-default row-gap-default",
    border: "grid grid-cols-2 col-gap-default row-gap-default"
  },
  3:
  {
    equal: "grid grid-cols-3 col-gap-default row-gap-default",
    border: "grid grid-cols-3 col-gap-default row-gap-default",
    featured: "grid grid-cols-3 col-gap-default row-gap-default grid-c-3--featured"
  },
  4:
  {
    equal: "grid grid-cols-4 col-gap-default row-gap-default",
    border: "grid grid-cols-4 col-gap-default row-gap-default"
  }
}
%}

{% set config = _context['config_' ~ columns ] %}
{% set class_config = configuration[columns][config] %}

{% set wrapper__classes = wrapper__classes|default([])|merge([
  wrapper ? 'grid-c-container',
  full ? 'full',
  text_color ? 'text-' ~ text_color,
  bg_color ? 'bg-' ~ bg_color,
  padding_top == 'large' ? 'small-pt-l' : '',
  padding_top == 'medium' ? 'small-pt-m' : '',
  padding_top == 'small' ? 'small-pt-s' : '',
  padding_bottom == 'large' ? 'small-pb-l' : '',
  padding_bottom == 'medium' ? 'small-pb-m' : '',
  padding_bottom == 'small' ? 'small-pb-s' : ''
]) | sort | join(' ') | trim %}

{% set classes = classes|default([])|merge([
  class_config
]) | sort | join(' ') | trim %}

{% set header__classes = header__classes|default([])|merge([
  'grid__header',
  'small-12',
  'cell',
  'small-pt-s',
  'small-pb-s',
  header__text-alignment ? 'text-' ~ header__text-alignment
]) | sort | join(' ') | trim %}
{# Defaults: #}

{% set attributes = attributes|default(attributes_object()).addClass(classes) %}
{% set wrapper__attributes = wrapper__attributes|default(attributes_object()).addClass(wrapper__classes) %}
{% set header__attributes = header__attributes|default(attributes_object()).addClass(header__classes) %}


{%- set column_1 -%}{%- block column_1 -%}{{ _context['column_1' ] }}{% endblock %}{% endset %}
{%- set column_2 -%}{%- block column_2 -%}{{ _context['column_2' ] }}{% endblock %}{% endset %}
{%- set column_3 -%}{%- block column_3 -%}{{ _context['column_3' ] }}{% endblock %}{% endset %}
{%- set column_4 -%}{%- block column_4 -%}{{ _context['column_4' ] }}{% endblock %}{% endset %}

{% set wrappers_count = wrapper__attributes|length %}
{% if wrappers_count != 0 %}
<div {{ wrapper__attributes }}>
  {% endif %}
  <div {{ attributes }}>
    {% if header is not empty %}
      <div {{ header__attributes }}>{{ header }}</div>
    {% endif %}
    {% block columns %}
    {%- for i in 1..columns -%}
      {% block column %}
        {{ _context['column_' ~ i ] }}
      {% endblock %}
    {%- endfor -%}
    {% endblock %}
  </div>

  {% if wrappers_count != 0 %}
</div>
{% endif %}
